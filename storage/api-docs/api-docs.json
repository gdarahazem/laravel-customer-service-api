{
    "openapi": "3.0.0",
    "info": {
        "title": "Customer Service Management API",
        "description": "A comprehensive API for managing customers and their services",
        "contact": {
            "email": "admin@example.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000",
            "description": "API Server"
        }
    ],
    "paths": {
        "/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register new user",
                "description": "Register a new user and get authentication token",
                "operationId": "08136088c4862c313b35d6518bab8d3a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "john@example.com"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "token": {
                                                    "type": "string",
                                                    "example": "1|abc123..."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login user",
                "description": "Login user and get authentication token",
                "operationId": "99d66635c4992aeaa6aa44ff653d0563",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "john@example.com"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "token": {
                                                    "type": "string",
                                                    "example": "2|xyz789..."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout user",
                "description": "Logout user and revoke authentication token",
                "operationId": "6abf3b64a4bc7838d56346f05a5153af",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Logout successful"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/customers": {
            "get": {
                "tags": [
                    "Customers"
                ],
                "summary": "Get all customers",
                "description": "Retrieve a paginated list of all customers",
                "operationId": "5c3633016b89599a95d2ad2ded81b400",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customers retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Customers retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Customer"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Customers"
                ],
                "summary": "Create a new customer",
                "description": "Create a new customer record",
                "operationId": "2c663148e06f297a94a5f18021b59e50",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "email"
                                ],
                                "properties": {
                                    "first_name": {
                                        "description": "Customer's first name",
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "description": "Customer's last name",
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "email": {
                                        "description": "Customer's email address",
                                        "type": "string",
                                        "example": "john.doe@example.com"
                                    },
                                    "phone": {
                                        "description": "Customer's phone number",
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "company": {
                                        "description": "Customer's company",
                                        "type": "string",
                                        "example": "Acme Corp"
                                    },
                                    "address": {
                                        "description": "Customer's address",
                                        "type": "string",
                                        "example": "123 Main St"
                                    },
                                    "city": {
                                        "description": "Customer's city",
                                        "type": "string",
                                        "example": "New York"
                                    },
                                    "state": {
                                        "description": "Customer's state",
                                        "type": "string",
                                        "example": "NY"
                                    },
                                    "postal_code": {
                                        "description": "Customer's postal code",
                                        "type": "string",
                                        "example": "10001"
                                    },
                                    "country": {
                                        "description": "Customer's country",
                                        "type": "string",
                                        "example": "USA"
                                    },
                                    "status": {
                                        "description": "Customer's status",
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "inactive"
                                        ],
                                        "example": "active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Customer created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Customer created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Customer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/customers/{id}": {
            "get": {
                "tags": [
                    "Customers"
                ],
                "summary": "Get a specific customer",
                "description": "Retrieve a specific customer by ID",
                "operationId": "f326afc103532052d5665c3f8e1cf196",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customer retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Customer retrieved successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Customer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Customer not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Customers"
                ],
                "summary": "Update a customer",
                "description": "Update a specific customer by ID",
                "operationId": "eb33c2697754132e10bfe05589f08393",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "description": "Customer's first name",
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "description": "Customer's last name",
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "email": {
                                        "description": "Customer's email address",
                                        "type": "string",
                                        "example": "john.doe@example.com"
                                    },
                                    "phone": {
                                        "description": "Customer's phone number",
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "company": {
                                        "description": "Customer's company",
                                        "type": "string",
                                        "example": "Acme Corp"
                                    },
                                    "address": {
                                        "description": "Customer's address",
                                        "type": "string",
                                        "example": "123 Main St"
                                    },
                                    "city": {
                                        "description": "Customer's city",
                                        "type": "string",
                                        "example": "New York"
                                    },
                                    "state": {
                                        "description": "Customer's state",
                                        "type": "string",
                                        "example": "NY"
                                    },
                                    "postal_code": {
                                        "description": "Customer's postal code",
                                        "type": "string",
                                        "example": "10001"
                                    },
                                    "country": {
                                        "description": "Customer's country",
                                        "type": "string",
                                        "example": "USA"
                                    },
                                    "status": {
                                        "description": "Customer's status",
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "inactive"
                                        ],
                                        "example": "active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Customer updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Customer updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Customer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Customer not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Customers"
                ],
                "summary": "Delete a customer",
                "description": "Delete a specific customer by ID",
                "operationId": "52793280bd5a511b458c53d76581a5ab",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customer deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Customer deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Customer not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/services": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "Get all services",
                "description": "Retrieve a paginated list of all services",
                "operationId": "7427356885cfb02aa536e9f117be4cac",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "active",
                                "inactive",
                                "pending",
                                "completed"
                            ]
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filter by type",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "consultation",
                                "development",
                                "maintenance",
                                "support",
                                "training",
                                "other"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Services retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Services retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Service"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Services"
                ],
                "summary": "Create a new service",
                "description": "Create a new service for a customer",
                "operationId": "5036c80b50b3692feb9eb282be8923bc",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "customer_id",
                                    "name",
                                    "type",
                                    "price"
                                ],
                                "properties": {
                                    "customer_id": {
                                        "description": "Customer ID",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "name": {
                                        "description": "Service name",
                                        "type": "string",
                                        "example": "Web Development"
                                    },
                                    "description": {
                                        "description": "Service description",
                                        "type": "string",
                                        "example": "Complete website development"
                                    },
                                    "type": {
                                        "description": "Service type",
                                        "type": "string",
                                        "enum": [
                                            "consultation",
                                            "development",
                                            "maintenance",
                                            "support",
                                            "training",
                                            "other"
                                        ],
                                        "example": "development"
                                    },
                                    "price": {
                                        "description": "Service price",
                                        "type": "number",
                                        "format": "float",
                                        "example": 2500
                                    },
                                    "status": {
                                        "description": "Service status",
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "inactive",
                                            "pending",
                                            "completed"
                                        ],
                                        "example": "active"
                                    },
                                    "start_date": {
                                        "description": "Start date",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-02-01"
                                    },
                                    "end_date": {
                                        "description": "End date",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-03-15"
                                    },
                                    "duration_hours": {
                                        "description": "Duration in hours",
                                        "type": "integer",
                                        "example": 120
                                    },
                                    "features": {
                                        "description": "Service features",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "Responsive Design",
                                            "SEO"
                                        ]
                                    },
                                    "notes": {
                                        "description": "Additional notes",
                                        "type": "string",
                                        "example": "Special requirements"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Service created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Service created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Service"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/services/{id}": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "Get a specific service",
                "description": "Retrieve a specific service by ID",
                "operationId": "dd94e3c2f2eb8f68c21acf8b257832ef",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Service ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Service retrieved successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Service"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Service not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Services"
                ],
                "summary": "Update a service",
                "description": "Update a specific service by ID",
                "operationId": "420e458aacb0a731aee169388e17606c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Service ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "customer_id": {
                                        "description": "Customer ID",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "name": {
                                        "description": "Service name",
                                        "type": "string",
                                        "example": "Web Development"
                                    },
                                    "description": {
                                        "description": "Service description",
                                        "type": "string",
                                        "example": "Complete website development"
                                    },
                                    "type": {
                                        "description": "Service type",
                                        "type": "string",
                                        "enum": [
                                            "consultation",
                                            "development",
                                            "maintenance",
                                            "support",
                                            "training",
                                            "other"
                                        ],
                                        "example": "development"
                                    },
                                    "price": {
                                        "description": "Service price",
                                        "type": "number",
                                        "format": "float",
                                        "example": 2500
                                    },
                                    "status": {
                                        "description": "Service status",
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "inactive",
                                            "pending",
                                            "completed"
                                        ],
                                        "example": "active"
                                    },
                                    "start_date": {
                                        "description": "Start date",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-02-01"
                                    },
                                    "end_date": {
                                        "description": "End date",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-03-15"
                                    },
                                    "duration_hours": {
                                        "description": "Duration in hours",
                                        "type": "integer",
                                        "example": 120
                                    },
                                    "features": {
                                        "description": "Service features",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "Responsive Design",
                                            "SEO"
                                        ]
                                    },
                                    "notes": {
                                        "description": "Additional notes",
                                        "type": "string",
                                        "example": "Special requirements"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Service updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Service updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Service"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Service not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Services"
                ],
                "summary": "Delete a service",
                "description": "Delete a specific service by ID",
                "operationId": "32850462a010ec6de343a83b129f7fd0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Service ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Service deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Service not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/customers/{customerId}/services": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "Get services by customer",
                "description": "Retrieve all services for a specific customer",
                "operationId": "cd48e9bb0b60a32f69af51fe1bfb26dd",
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "path",
                        "description": "Customer ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customer services retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Customer services retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Service"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Customer not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Customer": {
                "title": "Customer",
                "description": "Customer model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "first_name": {
                        "type": "string",
                        "example": "John"
                    },
                    "last_name": {
                        "type": "string",
                        "example": "Doe"
                    },
                    "email": {
                        "type": "string",
                        "example": "john.doe@example.com"
                    },
                    "phone": {
                        "type": "string",
                        "example": "+1234567890"
                    },
                    "company": {
                        "type": "string",
                        "example": "Acme Corp"
                    },
                    "address": {
                        "type": "string",
                        "example": "123 Main St"
                    },
                    "city": {
                        "type": "string",
                        "example": "New York"
                    },
                    "state": {
                        "type": "string",
                        "example": "NY"
                    },
                    "postal_code": {
                        "type": "string",
                        "example": "10001"
                    },
                    "country": {
                        "type": "string",
                        "example": "USA"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "active",
                            "inactive"
                        ],
                        "example": "active"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00.000000Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00.000000Z"
                    }
                },
                "type": "object"
            },
            "CreateCustomerRequest": {
                "title": "Create Customer Request",
                "description": "Request body for creating a customer",
                "required": [
                    "first_name",
                    "last_name",
                    "email"
                ],
                "properties": {
                    "first_name": {
                        "description": "Customer's first name",
                        "type": "string",
                        "example": "John"
                    },
                    "last_name": {
                        "description": "Customer's last name",
                        "type": "string",
                        "example": "Doe"
                    },
                    "email": {
                        "description": "Customer's email address",
                        "type": "string",
                        "example": "john.doe@example.com"
                    },
                    "phone": {
                        "description": "Customer's phone number",
                        "type": "string",
                        "example": "+1234567890"
                    },
                    "company": {
                        "description": "Customer's company",
                        "type": "string",
                        "example": "Acme Corp"
                    },
                    "address": {
                        "description": "Customer's address",
                        "type": "string",
                        "example": "123 Main St"
                    },
                    "city": {
                        "description": "Customer's city",
                        "type": "string",
                        "example": "New York"
                    },
                    "state": {
                        "description": "Customer's state",
                        "type": "string",
                        "example": "NY"
                    },
                    "postal_code": {
                        "description": "Customer's postal code",
                        "type": "string",
                        "example": "10001"
                    },
                    "country": {
                        "description": "Customer's country",
                        "type": "string",
                        "example": "USA"
                    },
                    "status": {
                        "description": "Customer's status",
                        "type": "string",
                        "enum": [
                            "active",
                            "inactive"
                        ],
                        "example": "active"
                    }
                },
                "type": "object"
            },
            "UpdateCustomerRequest": {
                "title": "Update Customer Request",
                "description": "Request body for updating a customer",
                "properties": {
                    "first_name": {
                        "description": "Customer's first name",
                        "type": "string",
                        "example": "John"
                    },
                    "last_name": {
                        "description": "Customer's last name",
                        "type": "string",
                        "example": "Doe"
                    },
                    "email": {
                        "description": "Customer's email address",
                        "type": "string",
                        "example": "john.doe@example.com"
                    },
                    "phone": {
                        "description": "Customer's phone number",
                        "type": "string",
                        "example": "+1234567890"
                    },
                    "company": {
                        "description": "Customer's company",
                        "type": "string",
                        "example": "Acme Corp"
                    },
                    "address": {
                        "description": "Customer's address",
                        "type": "string",
                        "example": "123 Main St"
                    },
                    "city": {
                        "description": "Customer's city",
                        "type": "string",
                        "example": "New York"
                    },
                    "state": {
                        "description": "Customer's state",
                        "type": "string",
                        "example": "NY"
                    },
                    "postal_code": {
                        "description": "Customer's postal code",
                        "type": "string",
                        "example": "10001"
                    },
                    "country": {
                        "description": "Customer's country",
                        "type": "string",
                        "example": "USA"
                    },
                    "status": {
                        "description": "Customer's status",
                        "type": "string",
                        "enum": [
                            "active",
                            "inactive"
                        ],
                        "example": "active"
                    }
                },
                "type": "object"
            },
            "Service": {
                "title": "Service",
                "description": "Service model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "customer_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Web Development"
                    },
                    "description": {
                        "type": "string",
                        "example": "Complete website development with modern technologies"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "consultation",
                            "development",
                            "maintenance",
                            "support",
                            "training",
                            "other"
                        ],
                        "example": "development"
                    },
                    "price": {
                        "type": "number",
                        "format": "float",
                        "example": 2500
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "active",
                            "inactive",
                            "pending",
                            "completed"
                        ],
                        "example": "active"
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-02-01"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-03-15"
                    },
                    "duration_hours": {
                        "type": "integer",
                        "example": 120
                    },
                    "features": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "Responsive Design",
                            "SEO Optimization",
                            "Admin Panel"
                        ]
                    },
                    "notes": {
                        "type": "string",
                        "example": "Client requires mobile-first approach"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00.000000Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00.000000Z"
                    },
                    "customer": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "first_name": {
                                "type": "string",
                                "example": "John"
                            },
                            "last_name": {
                                "type": "string",
                                "example": "Doe"
                            },
                            "email": {
                                "type": "string",
                                "example": "john.doe@example.com"
                            },
                            "company": {
                                "type": "string",
                                "example": "Acme Corp"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "http",
                "description": "Laravel Sanctum token authentication",
                "name": "Authorization",
                "in": "header",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Customers",
            "description": "Customers"
        },
        {
            "name": "Services",
            "description": "Services"
        }
    ],
    "security": [
        {
            "sanctum": []
        }
    ]
}